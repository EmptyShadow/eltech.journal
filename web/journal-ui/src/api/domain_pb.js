// source: domain.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.github.com.EmptyShadow.eltech.journal.api.Admin', null, global);
goog.exportSymbol('proto.github.com.EmptyShadow.eltech.journal.api.Claims', null, global);
goog.exportSymbol('proto.github.com.EmptyShadow.eltech.journal.api.Credentials', null, global);
goog.exportSymbol('proto.github.com.EmptyShadow.eltech.journal.api.FullName', null, global);
goog.exportSymbol('proto.github.com.EmptyShadow.eltech.journal.api.PageParams', null, global);
goog.exportSymbol('proto.github.com.EmptyShadow.eltech.journal.api.ProfileStatus', null, global);
goog.exportSymbol('proto.github.com.EmptyShadow.eltech.journal.api.Role', null, global);
goog.exportSymbol('proto.github.com.EmptyShadow.eltech.journal.api.Session', null, global);
goog.exportSymbol('proto.github.com.EmptyShadow.eltech.journal.api.Tokens', null, global);
goog.exportSymbol('proto.github.com.EmptyShadow.eltech.journal.api.User', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.EmptyShadow.eltech.journal.api.FullName = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.EmptyShadow.eltech.journal.api.FullName, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.EmptyShadow.eltech.journal.api.FullName.displayName = 'proto.github.com.EmptyShadow.eltech.journal.api.FullName';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.EmptyShadow.eltech.journal.api.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.EmptyShadow.eltech.journal.api.User.repeatedFields_, null);
};
goog.inherits(proto.github.com.EmptyShadow.eltech.journal.api.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.EmptyShadow.eltech.journal.api.User.displayName = 'proto.github.com.EmptyShadow.eltech.journal.api.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.EmptyShadow.eltech.journal.api.Credentials = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.EmptyShadow.eltech.journal.api.Credentials, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.EmptyShadow.eltech.journal.api.Credentials.displayName = 'proto.github.com.EmptyShadow.eltech.journal.api.Credentials';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.EmptyShadow.eltech.journal.api.Tokens = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.EmptyShadow.eltech.journal.api.Tokens, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.EmptyShadow.eltech.journal.api.Tokens.displayName = 'proto.github.com.EmptyShadow.eltech.journal.api.Tokens';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.EmptyShadow.eltech.journal.api.Session = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.EmptyShadow.eltech.journal.api.Session, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.EmptyShadow.eltech.journal.api.Session.displayName = 'proto.github.com.EmptyShadow.eltech.journal.api.Session';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.EmptyShadow.eltech.journal.api.Claims = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.EmptyShadow.eltech.journal.api.Claims, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.EmptyShadow.eltech.journal.api.Claims.displayName = 'proto.github.com.EmptyShadow.eltech.journal.api.Claims';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.EmptyShadow.eltech.journal.api.Admin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.EmptyShadow.eltech.journal.api.Admin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.EmptyShadow.eltech.journal.api.Admin.displayName = 'proto.github.com.EmptyShadow.eltech.journal.api.Admin';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.EmptyShadow.eltech.journal.api.PageParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.EmptyShadow.eltech.journal.api.PageParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.github.com.EmptyShadow.eltech.journal.api.PageParams.displayName = 'proto.github.com.EmptyShadow.eltech.journal.api.PageParams';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.EmptyShadow.eltech.journal.api.FullName.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.EmptyShadow.eltech.journal.api.FullName.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.FullName} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.EmptyShadow.eltech.journal.api.FullName.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    middlename: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lastname: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.FullName}
 */
proto.github.com.EmptyShadow.eltech.journal.api.FullName.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.EmptyShadow.eltech.journal.api.FullName;
  return proto.github.com.EmptyShadow.eltech.journal.api.FullName.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.FullName} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.FullName}
 */
proto.github.com.EmptyShadow.eltech.journal.api.FullName.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMiddlename(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.EmptyShadow.eltech.journal.api.FullName.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.EmptyShadow.eltech.journal.api.FullName.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.FullName} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.EmptyShadow.eltech.journal.api.FullName.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFirstname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMiddlename();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLastname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string FirstName = 1;
 * @return {string}
 */
proto.github.com.EmptyShadow.eltech.journal.api.FullName.prototype.getFirstname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.FullName} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.FullName.prototype.setFirstname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string MiddleName = 2;
 * @return {string}
 */
proto.github.com.EmptyShadow.eltech.journal.api.FullName.prototype.getMiddlename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.FullName} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.FullName.prototype.setMiddlename = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string LastName = 3;
 * @return {string}
 */
proto.github.com.EmptyShadow.eltech.journal.api.FullName.prototype.getLastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.FullName} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.FullName.prototype.setLastname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.EmptyShadow.eltech.journal.api.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pwd: msg.getPwd_asB64(),
    fullname: (f = msg.getFullname()) && proto.github.com.EmptyShadow.eltech.journal.api.FullName.toObject(includeInstance, f),
    rolesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedat: (f = msg.getUpdatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    deletedat: (f = msg.getDeletedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.User}
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.EmptyShadow.eltech.journal.api.User;
  return proto.github.com.EmptyShadow.eltech.journal.api.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.User}
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPwd(value);
      break;
    case 4:
      var value = new proto.github.com.EmptyShadow.eltech.journal.api.FullName;
      reader.readMessage(value,proto.github.com.EmptyShadow.eltech.journal.api.FullName.deserializeBinaryFromReader);
      msg.setFullname(value);
      break;
    case 5:
      var value = /** @type {!Array<!proto.github.com.EmptyShadow.eltech.journal.api.Role>} */ (reader.readPackedEnum());
      msg.setRolesList(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeletedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.EmptyShadow.eltech.journal.api.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPwd_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getFullname();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.github.com.EmptyShadow.eltech.journal.api.FullName.serializeBinaryToWriter
    );
  }
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      5,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDeletedat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ID = 1;
 * @return {string}
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.User} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Email = 2;
 * @return {string}
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.User} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes Pwd = 3;
 * @return {string}
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.getPwd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes Pwd = 3;
 * This is a type-conversion wrapper around `getPwd()`
 * @return {string}
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.getPwd_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPwd()));
};


/**
 * optional bytes Pwd = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPwd()`
 * @return {!Uint8Array}
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.getPwd_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPwd()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.User} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.setPwd = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional FullName FullName = 4;
 * @return {?proto.github.com.EmptyShadow.eltech.journal.api.FullName}
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.getFullname = function() {
  return /** @type{?proto.github.com.EmptyShadow.eltech.journal.api.FullName} */ (
    jspb.Message.getWrapperField(this, proto.github.com.EmptyShadow.eltech.journal.api.FullName, 4));
};


/**
 * @param {?proto.github.com.EmptyShadow.eltech.journal.api.FullName|undefined} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.User} returns this
*/
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.setFullname = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.User} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.clearFullname = function() {
  return this.setFullname(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.hasFullname = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated Role Roles = 5;
 * @return {!Array<!proto.github.com.EmptyShadow.eltech.journal.api.Role>}
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.getRolesList = function() {
  return /** @type {!Array<!proto.github.com.EmptyShadow.eltech.journal.api.Role>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<!proto.github.com.EmptyShadow.eltech.journal.api.Role>} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.User} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.setRolesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.Role} value
 * @param {number=} opt_index
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.User} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.addRoles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.User} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.clearRolesList = function() {
  return this.setRolesList([]);
};


/**
 * optional google.protobuf.Timestamp CreatedAt = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.User} returns this
*/
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.setCreatedat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.User} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.clearCreatedat = function() {
  return this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp UpdatedAt = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.getUpdatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.User} returns this
*/
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.User} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp DeletedAt = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.getDeletedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.User} returns this
*/
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.setDeletedat = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.User} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.clearDeletedat = function() {
  return this.setDeletedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.EmptyShadow.eltech.journal.api.User.prototype.hasDeletedat = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Credentials.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.EmptyShadow.eltech.journal.api.Credentials.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.Credentials} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.EmptyShadow.eltech.journal.api.Credentials.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sha1hashpwd: msg.getSha1hashpwd_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Credentials}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Credentials.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.EmptyShadow.eltech.journal.api.Credentials;
  return proto.github.com.EmptyShadow.eltech.journal.api.Credentials.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.Credentials} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Credentials}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Credentials.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSha1hashpwd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Credentials.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.EmptyShadow.eltech.journal.api.Credentials.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.Credentials} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.EmptyShadow.eltech.journal.api.Credentials.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSha1hashpwd_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional string Email = 1;
 * @return {string}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Credentials.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Credentials} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.Credentials.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes SHA1HashPWD = 2;
 * @return {string}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Credentials.prototype.getSha1hashpwd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes SHA1HashPWD = 2;
 * This is a type-conversion wrapper around `getSha1hashpwd()`
 * @return {string}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Credentials.prototype.getSha1hashpwd_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSha1hashpwd()));
};


/**
 * optional bytes SHA1HashPWD = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSha1hashpwd()`
 * @return {!Uint8Array}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Credentials.prototype.getSha1hashpwd_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSha1hashpwd()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Credentials} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.Credentials.prototype.setSha1hashpwd = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Tokens.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.EmptyShadow.eltech.journal.api.Tokens.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.Tokens} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.EmptyShadow.eltech.journal.api.Tokens.toObject = function(includeInstance, msg) {
  var f, obj = {
    access: jspb.Message.getFieldWithDefault(msg, 1, ""),
    refresh: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Tokens}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Tokens.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.EmptyShadow.eltech.journal.api.Tokens;
  return proto.github.com.EmptyShadow.eltech.journal.api.Tokens.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.Tokens} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Tokens}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Tokens.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefresh(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Tokens.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.EmptyShadow.eltech.journal.api.Tokens.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.Tokens} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.EmptyShadow.eltech.journal.api.Tokens.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccess();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRefresh();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string Access = 1;
 * @return {string}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Tokens.prototype.getAccess = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Tokens} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.Tokens.prototype.setAccess = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Refresh = 2;
 * @return {string}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Tokens.prototype.getRefresh = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Tokens} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.Tokens.prototype.setRefresh = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Session.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.EmptyShadow.eltech.journal.api.Session.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.Session} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.EmptyShadow.eltech.journal.api.Session.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    closedat: (f = msg.getClosedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Session}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Session.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.EmptyShadow.eltech.journal.api.Session;
  return proto.github.com.EmptyShadow.eltech.journal.api.Session.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.Session} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Session}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Session.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setClosedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Session.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.EmptyShadow.eltech.journal.api.Session.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.Session} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.EmptyShadow.eltech.journal.api.Session.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getClosedat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ID = 1;
 * @return {string}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Session.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Session} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.Session.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string UserID = 2;
 * @return {string}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Session.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Session} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.Session.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp CreatedAt = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Session.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Session} returns this
*/
proto.github.com.EmptyShadow.eltech.journal.api.Session.prototype.setCreatedat = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Session} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.Session.prototype.clearCreatedat = function() {
  return this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Session.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp ClosedAt = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Session.prototype.getClosedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Session} returns this
*/
proto.github.com.EmptyShadow.eltech.journal.api.Session.prototype.setClosedat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Session} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.Session.prototype.clearClosedat = function() {
  return this.setClosedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Session.prototype.hasClosedat = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Claims.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.EmptyShadow.eltech.journal.api.Claims.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.Claims} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.EmptyShadow.eltech.journal.api.Claims.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Claims}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Claims.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.EmptyShadow.eltech.journal.api.Claims;
  return proto.github.com.EmptyShadow.eltech.journal.api.Claims.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.Claims} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Claims}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Claims.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Claims.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.EmptyShadow.eltech.journal.api.Claims.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.Claims} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.EmptyShadow.eltech.journal.api.Claims.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string SessionID = 1;
 * @return {string}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Claims.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Claims} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.Claims.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string UserID = 2;
 * @return {string}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Claims.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Claims} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.Claims.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Admin.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.EmptyShadow.eltech.journal.api.Admin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.Admin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.EmptyShadow.eltech.journal.api.Admin.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.github.com.EmptyShadow.eltech.journal.api.User.toObject(includeInstance, f),
    contactinformation: jspb.Message.getFieldWithDefault(msg, 2, ""),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0),
    blockreason: jspb.Message.getFieldWithDefault(msg, 4, ""),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedat: (f = msg.getUpdatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Admin}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Admin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.EmptyShadow.eltech.journal.api.Admin;
  return proto.github.com.EmptyShadow.eltech.journal.api.Admin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.Admin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Admin}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Admin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.github.com.EmptyShadow.eltech.journal.api.User;
      reader.readMessage(value,proto.github.com.EmptyShadow.eltech.journal.api.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactinformation(value);
      break;
    case 3:
      var value = /** @type {!proto.github.com.EmptyShadow.eltech.journal.api.ProfileStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockreason(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Admin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.EmptyShadow.eltech.journal.api.Admin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.Admin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.EmptyShadow.eltech.journal.api.Admin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.github.com.EmptyShadow.eltech.journal.api.User.serializeBinaryToWriter
    );
  }
  f = message.getContactinformation();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getBlockreason();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional User User = 1;
 * @return {?proto.github.com.EmptyShadow.eltech.journal.api.User}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Admin.prototype.getUser = function() {
  return /** @type{?proto.github.com.EmptyShadow.eltech.journal.api.User} */ (
    jspb.Message.getWrapperField(this, proto.github.com.EmptyShadow.eltech.journal.api.User, 1));
};


/**
 * @param {?proto.github.com.EmptyShadow.eltech.journal.api.User|undefined} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Admin} returns this
*/
proto.github.com.EmptyShadow.eltech.journal.api.Admin.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Admin} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.Admin.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Admin.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string ContactInformation = 2;
 * @return {string}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Admin.prototype.getContactinformation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Admin} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.Admin.prototype.setContactinformation = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ProfileStatus Status = 3;
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.ProfileStatus}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Admin.prototype.getStatus = function() {
  return /** @type {!proto.github.com.EmptyShadow.eltech.journal.api.ProfileStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.ProfileStatus} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Admin} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.Admin.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string BlockReason = 4;
 * @return {string}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Admin.prototype.getBlockreason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Admin} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.Admin.prototype.setBlockreason = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp CreatedAt = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Admin.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Admin} returns this
*/
proto.github.com.EmptyShadow.eltech.journal.api.Admin.prototype.setCreatedat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Admin} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.Admin.prototype.clearCreatedat = function() {
  return this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Admin.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp UpdatedAt = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Admin.prototype.getUpdatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Admin} returns this
*/
proto.github.com.EmptyShadow.eltech.journal.api.Admin.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.Admin} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.Admin.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Admin.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.EmptyShadow.eltech.journal.api.PageParams.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.EmptyShadow.eltech.journal.api.PageParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.PageParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.EmptyShadow.eltech.journal.api.PageParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.PageParams}
 */
proto.github.com.EmptyShadow.eltech.journal.api.PageParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.EmptyShadow.eltech.journal.api.PageParams;
  return proto.github.com.EmptyShadow.eltech.journal.api.PageParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.PageParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.PageParams}
 */
proto.github.com.EmptyShadow.eltech.journal.api.PageParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.EmptyShadow.eltech.journal.api.PageParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.EmptyShadow.eltech.journal.api.PageParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.EmptyShadow.eltech.journal.api.PageParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.EmptyShadow.eltech.journal.api.PageParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 Limit = 1;
 * @return {number}
 */
proto.github.com.EmptyShadow.eltech.journal.api.PageParams.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.PageParams} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.PageParams.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Offset = 2;
 * @return {number}
 */
proto.github.com.EmptyShadow.eltech.journal.api.PageParams.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.github.com.EmptyShadow.eltech.journal.api.PageParams} returns this
 */
proto.github.com.EmptyShadow.eltech.journal.api.PageParams.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.github.com.EmptyShadow.eltech.journal.api.Role = {
  ADMIN: 0,
  STUDENT: 1,
  TEACHER: 2
};

/**
 * @enum {number}
 */
proto.github.com.EmptyShadow.eltech.journal.api.ProfileStatus = {
  ON_VALIDATE: 0,
  ACTIVE: 1,
  DISABLE: 2,
  BLOCKED: 3
};

goog.object.extend(exports, proto.github.com.EmptyShadow.eltech.journal.api);
