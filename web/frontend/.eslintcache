[{"C:\\repos\\eltech.journal\\web\\frontend\\src\\index.js":"1","C:\\repos\\eltech.journal\\web\\frontend\\src\\App.js":"2","C:\\repos\\eltech.journal\\web\\frontend\\src\\components\\LoginForm.jsx":"3","C:\\repos\\eltech.journal\\web\\frontend\\src\\components\\loginForm.jsx":"4","C:\\repos\\eltech.journal\\web\\frontend\\src\\components\\registrationForm.jsx":"5","C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\index.jsx":"6","C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\auth\\auth.jsx":"7","C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\home.jsx":"8","C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\components\\statement\\Task.jsx":"9","C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\components\\profile\\profile.jsx":"10","C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\components\\statement\\statement.jsx":"11","C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\components\\admin\\admin.jsx":"12","C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\components\\statement\\descriptiomItem.jsx":"13","C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\components\\admin\\users.jsx":"14","C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\components\\statement\\courseTabs.jsx":"15","C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\components\\admin\\courses.jsx":"16","C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\components\\statement\\coursesTable.jsx":"17","C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\components\\statement\\markTables.jsx":"18","C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\components\\statement\\response.jsx":"19"},{"size":277,"mtime":1611570323123,"results":"20","hashOfConfig":"21"},{"size":1208,"mtime":1611682717988,"results":"22","hashOfConfig":"21"},{"size":1899,"mtime":1610462742456,"results":"23","hashOfConfig":"21"},{"size":1980,"mtime":1611599306184,"results":"24","hashOfConfig":"21"},{"size":2919,"mtime":1611570323102,"results":"25","hashOfConfig":"21"},{"size":94,"mtime":1611570323194,"results":"26","hashOfConfig":"21"},{"size":556,"mtime":1611576980759,"results":"27","hashOfConfig":"21"},{"size":1592,"mtime":1611580931126,"results":"28","hashOfConfig":"21"},{"size":3218,"mtime":1611681967273,"results":"29","hashOfConfig":"21"},{"size":3397,"mtime":1611570323163,"results":"30","hashOfConfig":"21"},{"size":1461,"mtime":1611580973258,"results":"31","hashOfConfig":"21"},{"size":1018,"mtime":1611570323145,"results":"32","hashOfConfig":"21"},{"size":290,"mtime":1611570323175,"results":"33","hashOfConfig":"21"},{"size":1428,"mtime":1611677181050,"results":"34","hashOfConfig":"21"},{"size":661,"mtime":1611581047623,"results":"35","hashOfConfig":"21"},{"size":7346,"mtime":1611677881756,"results":"36","hashOfConfig":"21"},{"size":8739,"mtime":1611586970733,"results":"37","hashOfConfig":"21"},{"size":3265,"mtime":1611658920028,"results":"38","hashOfConfig":"21"},{"size":5075,"mtime":1611682927961,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1fttadg",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\repos\\eltech.journal\\web\\frontend\\src\\index.js",[],["83","84"],"C:\\repos\\eltech.journal\\web\\frontend\\src\\App.js",[],"C:\\repos\\eltech.journal\\web\\frontend\\src\\components\\LoginForm.jsx",[],["85","86"],"C:\\repos\\eltech.journal\\web\\frontend\\src\\components\\loginForm.jsx",[],"C:\\repos\\eltech.journal\\web\\frontend\\src\\components\\registrationForm.jsx",[],"C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\index.jsx",[],"C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\auth\\auth.jsx",[],"C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\home.jsx",[],"C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\components\\statement\\Task.jsx",[],"C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\components\\profile\\profile.jsx",[],"C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\components\\statement\\statement.jsx",[],"C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\components\\admin\\admin.jsx",[],"C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\components\\statement\\descriptiomItem.jsx",[],"C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\components\\admin\\users.jsx",["87"],"import React from 'react';\r\nimport {Button, Table} from 'antd';\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Имя',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    },\r\n    {\r\n        title: 'Роль',\r\n        dataIndex: 'role',\r\n        key: 'role'\r\n    },\r\n    {\r\n        title: 'Группа',\r\n        dataIndex: 'group',\r\n        key: 'group',\r\n    },\r\n    {\r\n        title: 'E-mail',\r\n        dataIndex: 'email',\r\n        key: 'email'\r\n    }\r\n];\r\n\r\nconst dataSource = [\r\n    {\r\n        key: '1',\r\n        name: 'Бердникова Евгения Викторовна',\r\n        role: 'Студент',\r\n        group: '5302',\r\n        email: 'asd@hdsjd.com'\r\n    },\r\n    {\r\n        key: '2',\r\n        name: 'Неботов Дмитрий Сергеевич',\r\n        role: 'Студент',\r\n        group: '5302',\r\n        email: 'asd@hdsjd.com'\r\n    },\r\n    {\r\n        key: '3',\r\n        name: 'Ларин Роман Сергеевич',\r\n        role: 'Студент',\r\n        group: '5302',\r\n        email: 'asd@hdsjd.com'\r\n    },\r\n    {\r\n        key: '5',\r\n        name: 'Кузьмин Сергей Алексеевич',\r\n        role: 'Преподаватель',\r\n        group: '-',\r\n        email: 'asd@hdsjd.com'\r\n    }\r\n];\r\n\r\nconst Users = () => {\r\n    return (\r\n        <Table\r\n            columns={columns}\r\n            dataSource={dataSource}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Users;","C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\components\\statement\\courseTabs.jsx",[],"C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\components\\admin\\courses.jsx",[],"C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\components\\statement\\coursesTable.jsx",["88","89","90"],"import React from 'react';\r\nimport {Drawer, Button, DatePicker, Form, Input, Modal, Select, Space, Table, Tag} from \"antd\";\r\nimport Task from \"./Task\";\r\nimport moment from 'moment';\r\nimport Response from \"./response\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst dateFormat = 'DD.MM.YYYY';\r\nconst children = ['5301', '5302', '5303', '5304', '5306', '5307', '5308'];\r\n\r\nconst CoursesTable = ({courses, role}) => {\r\n    let columnsTask = [\r\n        {\r\n            title: 'Задание',\r\n            dataIndex: 'task',\r\n            key: 'task',\r\n        },\r\n        {\r\n            title: 'Тип',\r\n            dataIndex: 'type',\r\n            key: 'type',\r\n        },\r\n        {\r\n            title: 'Срок сдачи',\r\n            dataIndex: 'deadline',\r\n            key: 'deadline',\r\n        },\r\n        {\r\n            title: 'Группы',\r\n            dataIndex: 'groups',\r\n            key: 'groups',\r\n            render: tags => (\r\n                <>\r\n                    {tags.map(tag => (\r\n                        <Tag color=\"blue\" key={tag}>\r\n                            {tag}\r\n                        </Tag>\r\n                    ))}\r\n                </>\r\n            ),\r\n\r\n        },\r\n        {\r\n            title: 'Действия',\r\n            key: 'action',\r\n            render: (data) => (\r\n                <Space size=\"middle\">\r\n                    <a onClick={() => {\r\n                        setSelectedTask(data);\r\n                        openDrawer(data);\r\n                    }} key={'full'}>Подробно</a>\r\n                    { role === 'teacher' && <a onClick={() => setIsVisibleTeacherDrawer(true)} key={'teachersDrawer'}>Ответы</a> }\r\n                    { role === 'teacher' &&   <a onClick={() => onDelete(data)} key={'delete'}>Удалить</a> }\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    columnsTask = role !== 'student' ? columnsTask : [...columnsTask, {\r\n        title: 'Оценка',\r\n        dataIndex: 'mark',\r\n        key: 'mark'\r\n    }]\r\n    const [dataSourceTask, setDataSourceTask] = React.useState([\r\n        {\r\n            key: '1',\r\n            task: 'Исследование систем',\r\n            type: 'Курсовая работа',\r\n            deadline: '10.01.2021',\r\n            groups: ['5301'],\r\n            description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip'\r\n        },\r\n        {\r\n            key: '2',\r\n            task: 'Лабораторная работа',\r\n            type: 'Лабораторная работа',\r\n            deadline: '14.01.2021',\r\n            groups: ['5301', '5302'],\r\n            description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut.'\r\n        }\r\n    ]);\r\n    const [isCreateVisible, setIsCreateVisible] = React.useState(false);\r\n    const [newTask, setNewTask] = React.useState({\r\n        key: '',\r\n        task: '',\r\n        type: '',\r\n        deadline: '',\r\n        groups: [],\r\n        description: ''\r\n    });\r\n    const [isVisibleDrawer, setIsVisibleDrawer] = React.useState(false);\r\n    const [selectedTask, setSelectedTask] = React.useState({});\r\n    const [isVisibleTeacherDrawer, setIsVisibleTeacherDrawer] = React.useState(false)\r\n\r\n    const openDrawer = () => {\r\n        setIsVisibleDrawer(true)\r\n    };\r\n\r\n    const onDelete = (data) => {\r\n        setDataSourceTask(dataSourceTask.filter(item => item.key !== data.key));\r\n    }\r\n\r\n    const onCreate = () => {\r\n        setNewTask({\r\n            ...newTask,\r\n            key: Math.random()\r\n        });\r\n\r\n        setDataSourceTask([...dataSourceTask, newTask]);\r\n        setNewTask({\r\n                key: '',\r\n                task: '',\r\n                type: '',\r\n                deadline: '',\r\n                groups: []\r\n            }\r\n        )\r\n        setIsCreateVisible(false);\r\n    }\r\n\r\n    const handleInputName = (event) => {\r\n        setNewTask({\r\n            ...newTask,\r\n            task: event.target.value\r\n        });\r\n    }\r\n\r\n    const handleSelect = (value) => {\r\n        setNewTask({\r\n            ...newTask,\r\n            type: value\r\n        });\r\n    }\r\n\r\n    const handleDate = (date, dateString) => {\r\n        setNewTask({\r\n            ...newTask,\r\n            deadline: dateString\r\n        });\r\n    }\r\n\r\n    const handleGroupSelect = (value) => {\r\n        setNewTask({\r\n            ...newTask,\r\n            groups: value\r\n        });\r\n    }\r\n\r\n    const handleDescription = (event) => {\r\n        setNewTask({\r\n            ...newTask,\r\n            description: event.target.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Table\r\n                columns={columnsTask}\r\n                dataSource={dataSourceTask}\r\n                bordered\r\n                footer={() => role === 'teacher' ? <Button onClick={() => setIsCreateVisible(true)}>Добавить задание</Button> : ''}\r\n            />\r\n\r\n            <Modal title={'Новое задание'}\r\n                   visible={isCreateVisible}\r\n                   onCancel={() => setIsCreateVisible(false)}\r\n                   footer={\r\n                       [\r\n                           <Button key=\"back\" onClick={() => setIsCreateVisible(false)}>\r\n                               Отмена\r\n                           </Button>,\r\n                           <Button key=\"submit\" type=\"primary\" onClick={onCreate}>\r\n                               Добавить\r\n                           </Button>,\r\n                       ]\r\n                   }\r\n            >\r\n                <Form>\r\n                    <Form.Item name=\"task\">\r\n                        <Input\r\n                            placeholder={'Название задания'}\r\n                            value={newTask.task}\r\n                            onChange={handleInputName}/>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Select\r\n                            value={newTask.type}\r\n                            onChange={handleSelect}\r\n                            placeholder={'Тип задания'}\r\n                        >\r\n                            <Option value={'Курсовая работа'}>Курсовая работа</Option>\r\n                            <Option value={'Лабораторная работа'}>Лабораторная работа</Option>\r\n                            <Option value={'Практическая работа'}>Практическая работа</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <DatePicker\r\n                            placeholder={'Деделайн'}\r\n                            format={dateFormat}\r\n                            value={newTask.deadline ? moment(newTask.deadline, dateFormat) : newTask.deadline}\r\n                            onChange={handleDate}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Select\r\n                            mode=\"multiple\"\r\n                            allowClear\r\n                            style={{width: '100%'}}\r\n                            placeholder=\"Группы\"\r\n                            onChange={handleGroupSelect}\r\n                        >\r\n                            {children && children.map(item =>\r\n                                <Option key={item}>{item}</Option>)\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <TextArea rows={4} value={newTask.description} onChange={handleDescription} />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <Drawer\r\n                title={'Задание'}\r\n                width={720}\r\n                placement={'right'}\r\n                closable\r\n                onClose={() => setIsVisibleDrawer(false)}\r\n                visible={isVisibleDrawer}\r\n\r\n            >\r\n              <Task task={selectedTask} role={role}  />\r\n            </Drawer>\r\n            <Drawer\r\n                title={'Ответы'}\r\n                width={400}\r\n                placement={'right'}\r\n                closable\r\n                onClose={() => setIsVisibleTeacherDrawer(false)}\r\n                visible={isVisibleTeacherDrawer}\r\n\r\n            >\r\n\r\n                <Response />\r\n            </Drawer>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default CoursesTable;","C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\components\\statement\\markTables.jsx",["91"],"import React from 'react';\r\nimport {Space, Table, Modal, Form, Input, InputNumber, Button} from \"antd\";\r\n\r\nconst MarkTables = ({role}) => {\r\n    const columnsMark = [\r\n        {\r\n            title: 'Студент',\r\n            dataIndex: 'student',\r\n            key: 'student',\r\n        },\r\n        {\r\n            title: 'Оценка',\r\n            dataIndex: 'mark',\r\n            key: 'mark',\r\n            editable: true\r\n        }\r\n    ]\r\n\r\n    const columnsDataMark = role==='teacher' ? [...columnsMark, {\r\n        title: 'Действия',\r\n        key: 'action',\r\n        render: (data) => (\r\n            <Space size=\"middle\">\r\n                <a onClick={() => {\r\n                    setSelectedStudent(data)\r\n                    onEdit()\r\n                }} key={'edit'}>Изменить</a>\r\n            </Space>\r\n        ),\r\n    }] : columnsMark;\r\n\r\n\r\n    const [isVisible, setIsVisible] = React.useState(false);\r\n    const [selectedStudent, setSelectedStudent] = React.useState({})\r\n    const [dataSourceMark, setDataSourceMark] = React.useState([\r\n        {\r\n            key: '32',\r\n            student: 'Бердникова Евгения Викторовна',\r\n            mark: ''\r\n        },\r\n        {\r\n            key: '243',\r\n            student: 'Неботов Дмитрий Сергеевич',\r\n            mark: ''\r\n        },\r\n        {\r\n            key: '23',\r\n            student: 'Ларин Роман Сергеевич',\r\n            mark: ''\r\n        },\r\n        {\r\n            key: '3223',\r\n            student: 'Петров Петр Петрович',\r\n            mark: ''\r\n        }\r\n    ]);\r\n\r\n    const onEdit = () => {\r\n        setIsVisible(true);\r\n    }\r\n\r\n    const setEdit = () => {\r\n        setDataSourceMark(dataSourceMark.map(item => item.key === selectedStudent.key ? selectedStudent : item));\r\n        setIsVisible(false);\r\n    }\r\n\r\n    const handleInput = (value) => {\r\n        setSelectedStudent({\r\n            ...selectedStudent,\r\n            mark: value\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Table\r\n                columns={columnsDataMark}\r\n                dataSource={dataSourceMark}\r\n            />\r\n\r\n            {isVisible &&\r\n            <Modal\r\n                title={'Оценка'}\r\n                visible={isVisible}\r\n                onCancel={() => setIsVisible(false)}\r\n                footer={\r\n                    [\r\n                        <Button key=\"back\" onClick={() => setIsVisible(false)}>\r\n                            Отмена\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" onClick={setEdit}>\r\n                            Изменить\r\n                        </Button>,\r\n                    ]\r\n                }\r\n            >\r\n                <Form>\r\n                    <Form.Item>\r\n                        <Input value={selectedStudent.student} disabled />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <InputNumber min={1} max={5} value={selectedStudent.mark} onChange={handleInput} />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default MarkTables;","C:\\repos\\eltech.journal\\web\\frontend\\src\\pages\\home\\components\\statement\\response.jsx",["92","93"],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"94","replacedBy":"98"},{"ruleId":"96","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":9,"nodeType":"102","messageId":"103","endLine":2,"endColumn":15},{"ruleId":"104","severity":1,"message":"105","line":50,"column":21,"nodeType":"106","endLine":53,"endColumn":37},{"ruleId":"104","severity":1,"message":"105","line":54,"column":45,"nodeType":"106","endLine":54,"endColumn":119},{"ruleId":"104","severity":1,"message":"105","line":55,"column":47,"nodeType":"106","endLine":55,"endColumn":96},{"ruleId":"104","severity":1,"message":"105","line":24,"column":17,"nodeType":"106","endLine":27,"endColumn":33},{"ruleId":"104","severity":1,"message":"105","line":48,"column":29,"nodeType":"106","endLine":48,"endColumn":88},{"ruleId":"104","severity":1,"message":"107","line":93,"column":34,"nodeType":"106","endLine":93,"endColumn":48},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],["108"],["109"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]